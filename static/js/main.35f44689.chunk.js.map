{"version":3,"sources":["components/Hero/index.jsx","components/CharacterCard/index.jsx","components/ListOfCharacters/Lista.jsx","components/ListOfCharacters/FetchGQL.jsx","components/ListOfCharacters/index.jsx","containers/Home/index.jsx","components/CharacterDetails/Front.jsx","components/Loading/Loader.jsx","components/Loading/index.jsx","containers/NotFound/index.jsx","components/CharacterDetails/index.jsx","containers/Character/index.jsx","containers/FirstPage/index.jsx","routes/App.js","components/reducers/RootReducer.js","index.js","assests/Buried.jpeg","assests/HeroImage.png","assests/Schwifty.png"],"names":["Hero","className","to","src","HeroImage","alt","CharacterCard","props","character","image","id","name","status","origin","Lista","characters","data","map","key","pathname","a","console","log","client","ApolloClient","uri","cache","InMemoryCache","query","gql","result","results","FetchGQL","ListOfCaracters","initCharacters","useSelector","state","initPage","page","useState","setPage","setCharacters","dispatch","useDispatch","totalPages","setTotalPages","filter","setFilter","filteredCharacters","setFilteredCharacters","error","setError","api","isScrolling","window","innerHeight","document","documentElement","scrollTop","offsetHeight","undefined","char","useEffect","url","fetch","then","res","json","response","info","pages","concat","type","payload","getData","addEventListener","removeEventListener","filteredData","placeholder","onChange","e","target","value","inputValue","Buried","Home","showHero","setShowHero","showIt","Front","species","gender","Loader","Loading","NotFound","CharacterDetails","characterID","loading","Character","location","split","FirstPage","Schwifty","App","exact","path","component","INITIAL_STATE","RootReducer","action","store","createStore","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.35f44689.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./styles.scss\";\nimport HeroImage from \"../../assests/HeroImage.png\";\nimport { Link } from \"react-router-dom\";\n\nfunction Hero() {\n  return (\n    <Fragment>\n      <header className=\"hero\">\n        <Link to=\"/characters/\">\n          <img className=\"hero__image\" src={HeroImage} alt=\"Hero Logo\"></img>\n        </Link>\n      </header>\n    </Fragment>\n  );\n}\n\nexport default Hero;\n","import React, { Fragment } from \"react\";\nimport \"./styles.scss\";\nfunction CharacterCard(props) {\n  const { character } = props;\n  return (\n    <Fragment>\n      <div className=\"characterCard\">\n        <section className=\"characterCard__image\">\n          <img src={character.image} alt=\"character\" />\n        </section>\n\n        <section className=\"characterCard__info\">\n          <h2 id=\"name\">{character.name}</h2>\n          <p id=\"status\">Status: {character.status}</p>\n          <p id=\"origin\">Origin: {character.origin.name}</p>\n        </section>\n      </div>\n    </Fragment>\n  );\n}\nexport default CharacterCard;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CharacterCard from \"../CharacterCard\";\n\nfunction Lista(props) {\n  const characters = props.data;\n\n  return (\n    <Fragment>\n      <ul className=\"listCharacters\">\n        {characters.map((character) => (\n          <li className=\"characters\" key={character.id}>\n            <Link\n              to={{\n                pathname: `/characters/${character.id}`,\n                id: character.id,\n              }}\n            >\n              <CharacterCard character={character} />\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n}\nexport default Lista;\n","import { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\n\nasync function FetchGQL(props) {\n  console.log(`props in fetch ${props}`);\n  const client = new ApolloClient({\n    uri: \"https://rickandmortyapi.com/graphql/\",\n    cache: new InMemoryCache(),\n  });\n\n  const result = await client.query({\n    query: gql`\n      {\n        characters(filter: { name: \"${props}\" }) {\n          results {\n            name\n            id\n            status\n            image\n            origin {\n              name\n            }\n          }\n        }\n      }\n    `,\n  });\n\n  const characters = result.data.characters.results;\n\n  return characters;\n}\nexport default FetchGQL;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./styles.scss\";\nimport Lista from \"./Lista\";\nimport FetchGQL from \"./FetchGQL\";\nimport Buried from \"../../assests/Buried.jpeg\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction ListOfCaracters() {\n  const initCharacters = useSelector((state) => state.characters);\n  const initPage = useSelector((state) => state.page);\n\n  const [page, setPage] = useState(initPage);\n  const [characters, setCharacters] = useState(initCharacters);\n\n  const dispatch = useDispatch();\n\n  const [totalPages, setTotalPages] = useState(7689);\n  const [filter, setFilter] = useState(\"\");\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\n  const [error, setError] = useState(false);\n\n  const api = `https://rickandmortyapi.com/api/character/?page=${page}`;\n\n  function getData(url) {\n    if (page <= totalPages) {\n      try {\n        fetch(url)\n          .then((res) => res.json())\n          .then((response) => {\n            setTotalPages(response.info.pages);\n            setCharacters((characters) => characters.concat(response.results));\n          });\n        dispatch({ type: \"UPDATE_CHARACTERS\", payload: [characters, page] });\n      } catch (error) {\n        return characters;\n      }\n    }\n  }\n\n  function isScrolling() {\n    if (\n      window.innerHeight + document.documentElement.scrollTop ===\n        document.documentElement.offsetHeight &&\n      totalPages > page\n    ) {\n      setPage(page + 1);\n    }\n  }\n\n  function inputValue(e) {\n    setFilter(e.target.value);\n  }\n\n  useEffect(() => {\n    getData(api);\n    window.addEventListener(\"scroll\", isScrolling);\n    return () => {\n      window.removeEventListener(\"scroll\", isScrolling);\n    };\n  }, [page]);\n\n  async function filteredData() {\n    if (filter && filter !== undefined && filter !== \"\") {\n      try {\n        const char = await FetchGQL(filter);\n        if (char) {\n          setError(false);\n          setFilteredCharacters(char);\n        }\n      } catch (e) {\n        setError(true);\n        setFilteredCharacters([]);\n      }\n    } else {\n      setFilteredCharacters([]);\n    }\n  }\n  useEffect(() => {\n    filteredData();\n  }, [filter]);\n\n  return (\n    <Fragment>\n      <header className=\"sticky\">\n        <div className=\"Search\">\n          <input\n            className=\"Search__input\"\n            placeholder=\"Write character's name\"\n            onChange={(e) => {\n              inputValue(e);\n            }}\n          />\n        </div>\n      </header>\n      <main>\n        {(!filter || filter === \"\") && <Lista data={characters} />}\n        {filteredCharacters && filter !== \"\" && (\n          <Lista data={filteredCharacters} />\n        )}\n        {error && filter && (\n          <img className=\"errorImage\" src={Buried} alt=\"No found\" />\n        )}\n      </main>\n    </Fragment>\n  );\n}\n\nexport default ListOfCaracters;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Hero from \"../../components/Hero\";\nimport ListOfCaracters from \"../../components/ListOfCharacters/index.jsx\";\n\nfunction Home() {\n  const [showHero, setShowHero] = useState(false);\n\n  function showIt() {\n    if (document.documentElement.scrollTop !== 0) {\n      setShowHero(false);\n    } else {\n      setShowHero(true);\n    }\n  }\n  useEffect(() => {\n    showIt();\n    window.addEventListener(\"scroll\", showIt);\n    return () => {\n      window.removeEventListener(\"scroll\", showIt);\n    };\n  }, []);\n  return (\n    <Fragment>\n      {showHero && <Hero />}\n      <ListOfCaracters />\n    </Fragment>\n  );\n}\n\nexport default Home;\n","import React, { Fragment } from \"react\";\nimport \"./styles.scss\";\nfunction Front(props) {\n  const { character } = props;\n  return (\n    <Fragment>\n      <div className=\"detailsCard\">\n        <section className=\"detailsCard__image\">\n          <img src={character.image} alt=\"character\" />\n        </section>\n\n        <section className=\"detailsCard__info\">\n          <small id=\"id\">{character.id}</small>\n          <h1 id=\"name\">{character.name}</h1>\n          <p id=\"status\">Status: {character.status}</p>\n          <p id=\"species\">Species: {character.species}</p>\n          <p id=\"type\">Type: {character.type}</p>\n          <p id=\"gender\">Gender: {character.gender}</p>\n        </section>\n      </div>\n    </Fragment>\n  );\n}\nexport default Front;\n","import React from \"react\";\nimport \"./Loader.scss\";\n\nfunction Loader() {\n  return (\n    <div className=\"lds-grid\">\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n}\nexport default Loader;\n","import React from \"react\";\nimport \"./PageLoading.scss\";\nimport Loader from \"./Loader\";\n\nfunction Loading() {\n  return (\n    <div className=\"PageLoading\">\n      <Loader />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Hero from \"../../components/Hero\";\nimport Buried from \"../../assests/Buried.jpeg\";\nimport \"./styles.scss\";\nfunction NotFound() {\n  return (\n    <Fragment>\n      <Hero />\n      <main>\n        <div className=\"notFoundContainer\">\n          <Link to=\"/characters\">\n            <img className=\"notFound-image\" src={Buried} alt=\"404 not found\" />\n          </Link>\n        </div>\n      </main>\n    </Fragment>\n  );\n}\nexport default NotFound;\n","import React, { Fragment } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport Front from \"./Front\";\nimport Loading from \"../Loading\";\nimport NotFound from \"../../containers/NotFound\";\nconst CharacterDetails = (props) => {\n  const characterID = props.id;\n  const query = gql`\n {\n   character(id: ${characterID}) {\n     id\n     name\n     status \n     species\n     type\n     gender\n    image\n   }\n }\n`;\n  return (\n    <Query query={query}>\n      {({ loading, error, data }) => {\n        if (loading) return <Loading />;\n        if (error) return <NotFound />;\n        const character = data.character;\n\n        return (\n          <Fragment>\n            <main>\n              <div className=\"cardContainer\">\n                <Front character={character} />\n              </div>\n            </main>\n          </Fragment>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default CharacterDetails;\n","import React, { Fragment } from \"react\";\nimport Hero from \"../../components/Hero\";\nimport \"./styles.scss\";\nimport CharacterDetails from \"../../components/CharacterDetails\";\n\nfunction Character(props) {\n  const id = validarUrl(props);\n\n  function validarUrl() {\n    if (props.location.id) {\n      return props.location.id;\n    } else {\n      return props.location.pathname.split(\"/\")[2];\n    }\n  }\n\n  return (\n    <Fragment>\n      <Hero />\n      <main>\n        <CharacterDetails id={id} />\n      </main>\n    </Fragment>\n  );\n}\nexport default Character;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Hero from \"../../components/Hero\";\nimport Schwifty from \"../../assests/Schwifty.png\";\nimport \"./styles.scss\";\nfunction FirstPage() {\n  return (\n    <Fragment>\n      <Hero />\n      <main>\n        <div className=\"schwiftyContainer\">\n          <Link to=\"/characters/\" className=\"schwiftyContainer__image\">\n            <img className=\"schwifty-image\" src={Schwifty} alt=\"get schwifty\" />\n          </Link>\n        </div>\n      </main>\n      <footer>\n        <h4 className=\"footer\">Cesar Martinez </h4>\n      </footer>\n    </Fragment>\n  );\n}\nexport default FirstPage;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"../containers/Home/index\";\nimport Character from \"../containers/Character/index\";\nimport FirstPage from \"../containers/FirstPage\";\nimport NotFound from \"../containers/NotFound\";\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={FirstPage} />\n        <Route exact path=\"/characters/\" component={Home} />\n        <Route exact path=\"/characters/:characterId\" component={Character} />\n        <Route component={NotFound} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\n  characters: [],\n  page: 1,\n};\n\nfunction RootReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"UPDATE_CHARACTERS\":\n      return {\n        characters: action.payload[0],\n        page: action.payload[1],\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default RootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./routes/App\";\nimport \"./GlobalStyles.scss\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport RootReducer from \"./components/reducers/RootReducer\";\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql/\",\n});\n\nconst store = createStore(RootReducer);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/Buried.e0d8d411.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/HeroImage.c78ce9dd.png\";","module.exports = __webpack_public_path__ + \"static/media/Schwifty.29c1a9c4.png\";"],"sourceRoot":""}