{"version":3,"sources":["components/Hero/index.jsx","components/Card/index.jsx","components/ListOfCharacters/Lista.jsx","components/ListOfCharacters/FetchGQL.jsx","components/ListOfCharacters/index.jsx","containers/Home/index.jsx","components/CharacterDetails/Front.jsx","components/Loading/Loader.jsx","components/Loading/index.jsx","containers/NotFound/index.jsx","components/CharacterDetails/index.jsx","containers/Character/index.jsx","containers/NewInterface/index.jsx","routes/App.js","components/reducers/RootReducer.js","index.js","assests/HeroImage.png"],"names":["Hero","className","to","src","HeroImage","alt","Card","props","character","status","toLowerCase","image","name","Lista","characters","data","map","key","id","pathname","onClick","document","documentElement","scrollTop","a","console","log","client","ApolloClient","uri","cache","InMemoryCache","query","gql","result","results","FetchGQL","ListOfCharacters","initCharacters","useSelector","state","initPage","page","useState","setPage","setCharacters","dispatch","useDispatch","totalPages","setTotalPages","filter","setFilter","filteredCharacters","setFilteredCharacters","error","setError","api","isScrolling","window","innerHeight","offsetHeight","undefined","char","useEffect","url","fetch","then","res","json","response","info","pages","concat","type","payload","getData","addEventListener","removeEventListener","filteredData","placeholder","onChange","e","target","value","inputValue","Home","showHero","setShowHero","headerProps","useSpring","opacity","showIt","div","style","Front","species","gender","location","Loader","Loading","NotFound","CharacterDetails","characterID","loading","Character","split","NewInteface","App","exact","path","component","INITIAL_STATE","RootReducer","action","store","createStore","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bc3a0d84.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./styles.scss\";\nimport HeroImage from \"../../assests/HeroImage.png\";\nimport { Link } from \"react-router-dom\";\n\nfunction Hero() {\n  return (\n    <Fragment>\n      <header className=\"hero\">\n        <Link to=\"/characters/\">\n          <img className=\"hero__image\" src={HeroImage} alt=\"Hero Logo\"></img>\n        </Link>\n      </header>\n    </Fragment>\n  );\n}\n\nexport default Hero;\n","import React, { Fragment } from \"react\";\nimport \"./styles.scss\";\n\nconst Card = (props) => {\n  const { character } = props;\n\n  const status = character.status.toLowerCase();\n\n  return (\n    <Fragment>\n      <div className=\"main-card-container\">\n        <div className=\"card-image-container\">\n          <img className=\"card-imagefade\" src={character.image} alt=\"\" />\n          <img className=\"card-mainImage\" src={character.image} alt=\"\" />\n        </div>\n        <div className=\"card-details-container\">\n          <div className=\"card-details-name\">\n            <span className={`card--statusIndicator ${status}`}></span>\n            <p>{character.name}</p>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Card;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../Card\";\n\nfunction Lista(props) {\n  const characters = props.data;\n\n  return (\n    <Fragment>\n      <ul className=\"listCharacters\">\n        {characters.map((character) => (\n          <li className=\"characters\" key={character.id}>\n            <Link\n              to={{\n                pathname: `/characters/${character.id}`,\n                id: character.id,\n              }}\n              onClick={() => {\n                document.documentElement.scrollTop = 0;\n              }}\n            >\n              <Card character={character} />\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n}\nexport default Lista;\n","import { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\n\nasync function FetchGQL(props) {\n  console.log(`props in fetch ${props}`);\n  const client = new ApolloClient({\n    uri: \"https://rickandmortyapi.com/graphql/\",\n    cache: new InMemoryCache(),\n  });\n\n  const result = await client.query({\n    query: gql`\n      {\n        characters(filter: { name: \"${props}\" }) {\n          results {\n            name\n            id\n            status\n            image\n            origin {\n              name\n            }\n          }\n        }\n      }\n    `,\n  });\n\n  const characters = result.data.characters.results;\n\n  return characters;\n}\nexport default FetchGQL;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./newStyles.scss\";\nimport Lista from \"./Lista\";\nimport FetchGQL from \"./FetchGQL\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction ListOfCharacters() {\n  const initCharacters = useSelector((state) => state.characters);\n  const initPage = useSelector((state) => state.page);\n\n  const [page, setPage] = useState(initPage);\n  const [characters, setCharacters] = useState(initCharacters);\n\n  const dispatch = useDispatch();\n\n  const [totalPages, setTotalPages] = useState(7689);\n  const [filter, setFilter] = useState(\"\");\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\n  const [error, setError] = useState(false);\n\n  const api = `https://rickandmortyapi.com/api/character/?page=${page}`;\n\n  function getData(url) {\n    if (page <= totalPages) {\n      try {\n        fetch(url)\n          .then((res) => res.json())\n          .then((response) => {\n            setTotalPages(response.info.pages);\n            setCharacters((characters) => characters.concat(response.results));\n          });\n        dispatch({ type: \"UPDATE_CHARACTERS\", payload: [characters, page] });\n      } catch (error) {\n        return characters;\n      }\n    }\n  }\n\n  function isScrolling() {\n    if (\n      window.innerHeight + document.documentElement.scrollTop ===\n        document.documentElement.offsetHeight &&\n      totalPages > page\n    ) {\n      setPage(page + 1);\n    }\n  }\n\n  function inputValue(e) {\n    setFilter(e.target.value);\n  }\n\n  useEffect(() => {\n    getData(api);\n    window.addEventListener(\"scroll\", isScrolling);\n    return () => {\n      window.removeEventListener(\"scroll\", isScrolling);\n    };\n  }, [page]);\n\n  async function filteredData() {\n    if (filter && filter !== undefined && filter !== \"\") {\n      try {\n        const char = await FetchGQL(filter);\n        if (char) {\n          setError(false);\n          setFilteredCharacters(char);\n        }\n      } catch (e) {\n        setError(true);\n        setFilteredCharacters([]);\n      }\n    } else {\n      setFilteredCharacters([]);\n    }\n  }\n  useEffect(() => {\n    filteredData();\n  }, [filter]);\n\n  return (\n    <Fragment>\n      <main>\n        <div className=\"search sticky\">\n          <input\n            className=\"search-input\"\n            placeholder=\"Write character's name\"\n            onChange={(e) => {\n              inputValue(e);\n            }}\n          />\n        </div>\n        {(!filter || filter === \"\") && <Lista data={characters} />}\n        {filteredCharacters && filter !== \"\" && (\n          <Lista data={filteredCharacters} />\n        )}\n        {error && filter && (\n          <div className=\"listCharacter-errorImage-container\">\n            {/* <img className=\"errorImage\" src={Buried} alt=\"No found\" /> */}\n            <h2>404: Ooops! we buried them</h2>\n          </div>\n        )}\n      </main>\n    </Fragment>\n  );\n}\n\nexport default ListOfCharacters;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Hero from \"../../components/Hero\";\nimport { useSpring, animated as a } from \"react-spring\";\nimport ListOfCaracters from \"../../components/ListOfCharacters/index.jsx\";\n\nfunction Home() {\n  const [showHero, setShowHero] = useState(false);\n  const headerProps = useSpring({\n    opacity: showHero ? 1 : 0,\n  });\n\n  function showIt() {\n    if (document.documentElement.scrollTop > 40) {\n      setShowHero(false);\n    } else {\n      setShowHero(true);\n    }\n  }\n  useEffect(() => {\n    showIt();\n    window.addEventListener(\"scroll\", showIt);\n    return () => {\n      window.removeEventListener(\"scroll\", showIt);\n    };\n  }, []);\n  return (\n    <Fragment>\n      <a.div style={headerProps}>\n        <Hero />\n      </a.div>\n      <ListOfCaracters />\n    </Fragment>\n  );\n}\n\nexport default Home;\n","import React, { Fragment } from \"react\";\nimport \"./styles.scss\";\nfunction Front(props) {\n  const { character } = props;\n  return (\n    <Fragment>\n      <div className=\"detailsCard\">\n        <section className=\"detailsCard__image\">\n          <img\n            className=\"detailsCard__image-faded\"\n            src={character.image}\n            alt=\"character\"\n          />\n          <img\n            className=\"detailsCard__image-main\"\n            src={character.image}\n            alt=\"character\"\n          />\n        </section>\n\n        <section className=\"detailsCard__info\">\n          <h2 className=\"detailsCard-name\">{character.name}</h2>\n          <small className=\"detailsCard-id\">{character.id}</small>\n\n          <p className=\"detailsCard-status\">\n            <span\n              className={`card--statusIndicator ${character.status.toLowerCase()}`}\n            ></span>\n            {character.status} - {character.species}\n          </p>\n\n          <p className=\"detailsCard-type\"> {character.type}</p>\n          <p className=\"detailsCard-gender\">{character.gender}</p>\n          <p className=\"detailsCard-lastLocation\">Last known location:</p>\n          <p className=\"detailsCard-location\"> {character.location.name}</p>\n        </section>\n      </div>\n    </Fragment>\n  );\n}\nexport default Front;\n","import React from \"react\";\nimport \"./Loader.scss\";\n\nfunction Loader() {\n  return (\n    <div className=\"lds-grid\">\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n}\nexport default Loader;\n","import React from \"react\";\nimport \"./PageLoading.scss\";\nimport Loader from \"./Loader\";\nimport ListOfCharacters from \"../ListOfCharacters\";\n\nfunction Loading() {\n  return (\n    <div className=\"PageLoading\">\n      <Loader />\n      <ListOfCharacters />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { Fragment } from \"react\";\n\nimport \"./styles.scss\";\nfunction NotFound() {\n  return (\n    <Fragment>\n      <main>\n        <div className=\"listCharacter-errorImage-container\">\n          <h2>404: Ooops! we buried them</h2>\n        </div>\n      </main>\n    </Fragment>\n  );\n}\nexport default NotFound;\n","import React, { Fragment } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport Front from \"./Front\";\nimport Loading from \"../Loading\";\nimport NotFound from \"../../containers/NotFound\";\n\nconst CharacterDetails = (props) => {\n  const characterID = props.id;\n  const query = gql`\n {\n   character(id: ${characterID}) {\n     id\n     name\n     status \n     species\n     type\n     gender\n    image\n    location{\n      name\n    }\n   }\n }\n`;\n  return (\n    <Query query={query}>\n      {({ loading, error, data }) => {\n        if (loading) return <Loading />;\n        if (error) return <NotFound />;\n        const character = data.character;\n\n        return (\n          <Fragment>\n            <Front character={character} />\n          </Fragment>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default CharacterDetails;\n","import React, { Fragment } from \"react\";\nimport Hero from \"../../components/Hero\";\nimport \"./styles.scss\";\nimport CharacterDetails from \"../../components/CharacterDetails\";\nimport ListOfCharacters from \"../../components/ListOfCharacters\";\nfunction Character(props) {\n  const id = validarUrl(props);\n\n  function validarUrl() {\n    if (props.location.id) {\n      return props.location.id;\n    } else {\n      return props.location.pathname.split(\"/\")[2];\n    }\n  }\n\n  return (\n    <Fragment>\n      <Hero />\n      <main>\n        <CharacterDetails id={id} />\n        <ListOfCharacters />\n      </main>\n    </Fragment>\n  );\n}\nexport default Character;\n","import React, { Fragment } from \"react\";\nimport ListofChatacters from \"../../components/ListOfCharacters\";\nimport Hero from \"../../components/Hero\";\nconst NewInteface = () => {\n  return (\n    <Fragment>\n      <Hero />\n      <ListofChatacters />\n    </Fragment>\n  );\n};\n\nexport default NewInteface;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"../containers/Home/index\";\nimport Character from \"../containers/Character/index\";\n//import FirstPage from \"../containers/FirstPage\";\nimport NotFound from \"../containers/NotFound\";\nimport NewInteface from \"../containers/NewInterface\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={NewInteface} />\n        <Route exact path=\"/characters/\" component={Home} />\n        <Route exact path=\"/characters/:characterId\" component={Character} />\n        <Route component={NotFound} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\n  characters: [],\n  page: 1,\n};\n\nfunction RootReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"UPDATE_CHARACTERS\":\n      return {\n        characters: action.payload[0],\n        page: action.payload[1],\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default RootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./routes/App\";\nimport \"./NewGlobalStyles.scss\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport RootReducer from \"./components/reducers/RootReducer\";\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql/\",\n});\n\nconst store = createStore(RootReducer);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/HeroImage.c78ce9dd.png\";"],"sourceRoot":""}