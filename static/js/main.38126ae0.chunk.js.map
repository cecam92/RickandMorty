{"version":3,"sources":["Assests/HeroImage.png","components/Hero/index.jsx","components/CharacterCard/index.jsx","components/ListOfCharacters/index.jsx","containers/Home/index.jsx","components/CharacterDetails/Front.jsx","components/CharacterDetails/index.jsx","containers/Character/index.jsx","routes/App.js","index.js"],"names":["module","exports","Hero","className","to","src","HeroImage","alt","CharacterCard","props","character","image","id","name","status","origin","getCharacters","pepito","localStorage","getItem","JSON","parse","getPage","ListOfCaracters","useState","parseInt","page","setPage","totalPages","setTotalPages","api","characters","setCharacters","isScrolling","window","innerHeight","document","documentElement","scrollTop","offsetHeight","useEffect","fetch","then","res","json","response","concat","results","info","pages","cards","index","setItem","stringify","saveInLocal","addEventListener","removeEventListener","map","key","pathname","Home","ListOfCharacters","Front","species","type","gender","CharacterDetails","characterID","query","gql","loading","error","data","Character","location","split","App","exact","path","component","client","ApolloClient","uri","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.38126ae0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HeroImage.42d6efdb.png\";","import React, { Fragment } from \"react\";\nimport \"./styles.scss\";\nimport HeroImage from \"../../Assests/HeroImage.png\";\nimport { Link } from \"react-router-dom\";\nfunction Hero() {\n  return (\n    <Fragment>\n      <header className=\"hero\">\n        <Link to=\"/\">\n          <img className=\"hero__image\" src={HeroImage} alt=\"Hero\"></img>\n        </Link>\n      </header>\n    </Fragment>\n  );\n}\nexport default Hero;\n","import React, { Fragment } from \"react\";\nimport \"./styles.scss\";\nfunction CharacterCard(props) {\n  const { character } = props;\n  return (\n    <Fragment>\n      <div className=\"characterCard\">\n        <section className=\"characterCard__image\">\n          <img src={character.image} alt=\"character\" />\n        </section>\n\n        <section className=\"characterCard__info\">\n          <h2 id=\"name\">{character.name}</h2>\n          <p id=\"status\">Status: {character.status}</p>\n          <p id=\"origin\">Origin: {character.origin.name}</p>\n        </section>\n      </div>\n    </Fragment>\n  );\n}\nexport default CharacterCard;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./styles.scss\";\nimport CharacterCard from \"../CharacterCard\";\nimport { Link } from \"react-router-dom\";\n//import useFetchData from \"../hooks/useFetchData\";\n\nfunction saveInLocal(cards, index) {\n  localStorage.setItem(\"characters\", JSON.stringify(cards));\n  localStorage.setItem(\"page\", index);\n}\nfunction getCharacters() {\n  const pepito = localStorage.getItem(\"characters\");\n  const data = JSON.parse(pepito);\n  return data;\n}\nfunction getPage() {\n  const index = localStorage.getItem(\"page\");\n  return index;\n}\n\nfunction ListOfCaracters() {\n  const localCharacters = () => {\n    return getCharacters() == null ? [] : getCharacters();\n  };\n\n  const index = () => {\n    return getPage() == null ? 1 : parseInt(getPage());\n  };\n\n  const [page, setPage] = useState(index);\n  const [totalPages, setTotalPages] = useState(28790);\n  const api = `https://rickandmortyapi.com/api/character/?page=${page}`;\n  const [characters, setCharacters] = useState(localCharacters);\n\n  function isScrolling() {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n      document.documentElement.offsetHeight\n    ) {\n      return;\n    } else {\n      if (page < totalPages) {\n        setPage(page + 1);\n      }\n    }\n  }\n\n  useEffect(() => {\n    fetchData(api);\n    saveInLocal(characters, page);\n    window.addEventListener(\"scroll\", isScrolling);\n    return () => {\n      window.removeEventListener(\"scroll\", isScrolling);\n    };\n  }, [api, page]);\n\n  function fetchData(url) {\n    fetch(url)\n      .then((res) => res.json())\n      .then((response) => {\n        setCharacters((characters) => characters.concat(response.results));\n        setTotalPages(response.info.pages);\n      });\n  }\n\n  return (\n    <Fragment>\n      <main>\n        <ul className=\"listCharacters\">\n          {characters.map((character) => (\n            <li className=\"characters\" key={character.id}>\n              <Link\n                to={{\n                  pathname: `/${character.id}`,\n                  id: character.id,\n                }}\n              >\n                <CharacterCard character={character} />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </Fragment>\n  );\n}\n\nexport default ListOfCaracters;\n","import React, { Fragment } from \"react\";\nimport Hero from \"../../components/Hero\";\nimport ListOfCharacters from \"../../components/ListOfCharacters/index.jsx\";\nfunction Home() {\n  return (\n    <Fragment>\n      <Hero />\n      <ListOfCharacters />\n    </Fragment>\n  );\n}\nexport default Home;\n","import React, { Fragment } from \"react\";\nimport \"./styles.scss\";\nfunction Front(props) {\n  const { character } = props;\n  return (\n    <Fragment>\n      <div className=\"detailsCard\">\n        <section className=\"detailsCard__image\">\n          <img src={character.image} alt=\"character\" />\n        </section>\n\n        <section className=\"detailsCard__info\">\n          <small id=\"id\">{character.id}</small>\n          <h1 id=\"name\">{character.name}</h1>\n          <p id=\"status\">Status: {character.status}</p>\n          <p id=\"species\">Species: {character.species}</p>\n          <p id=\"type\">Type: {character.type}</p>\n          <p id=\"gender\">Gender: {character.gender}</p>\n        </section>\n      </div>\n    </Fragment>\n  );\n}\nexport default Front;\n","import React, { Fragment } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport Front from \"./Front\";\n\nconst CharacterDetails = (props) => {\n  const characterID = props.id;\n\n  return (\n    <Query\n      query={gql`\n        {\n          character(id: ${characterID}) {\n            id\n            name\n            status \n            species\n            type\n            gender\n           image\n          }\n        }\n      `}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>error...</p>;\n        const character = data.character;\n\n        return (\n          <Fragment>\n            <div className=\"cardContainer\">\n              <Front character={character} />\n            </div>\n          </Fragment>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default CharacterDetails;\n","import React, { Fragment } from \"react\";\nimport Hero from \"../../components/Hero\";\nimport \"./styles.scss\";\nimport CharacterDetails from \"../../components/CharacterDetails\";\n\nfunction Character(props) {\n  const id = validarUrl(props);\n\n  function validarUrl() {\n    if (props.location.id) {\n      return props.location.id;\n    } else {\n      return props.location.pathname.split(\"/\")[1];\n    }\n  }\n\n  return (\n    <Fragment>\n      <Hero />\n      <CharacterDetails id={id} />\n    </Fragment>\n  );\n}\nexport default Character;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"../containers/Home/index\";\nimport Character from \"../containers/Character/index\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/:characterId\" component={Character} />\n        <Route\n          component={() => {\n            return <p>404: No found </p>;\n          }}\n        />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./routes/App\";\nimport \"./GlobalStyles.scss\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql/\",\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}